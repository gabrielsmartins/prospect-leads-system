apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'io.spring.dependency-management'

apply from: "$rootDir/repositories.gradle"
apply from: "$rootDir/repositories.gradle", to: buildscript

buildscript {
	apply from: "$rootDir/repositories.gradle", to: buildscript
	ext {
		springBootPluginVersion = '2.7.13'
		springBootDependencyManagementPluginVersion = '1.0.15.RELEASE'
		avroPluginVersion = '1.8.0'
	}
	dependencies {
		classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: springBootPluginVersion
		classpath group: 'io.spring.gradle', name: 'dependency-management-plugin', version: springBootDependencyManagementPluginVersion
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'jacoco'
	apply from: "${rootDir}/repositories.gradle"

	group = 'br.pucminas.bff'
	version = '0.0.1-SNAPSHOT'

	java {
		sourceCompatibility = '11'
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	ext {
		set('springBootVersion', "2.7.13")
		set('springCloudVersion', "2021.0.7")
		set('springDataCommonsVersion', "2.7.16")
		set('springAdminVersion', "2.7.11")
		set('logstashVersion', "7.4")
		set('assertJVersion', "3.24.2")
		set('mockitoVersion', "5.4.0")
		set('apacheCommonPoolVersion', "2.11.1")
		set('testcontainersVersion', "1.17.3")
		set('testcontainersRedisVersion', "1.6.4")
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
		implementation "de.codecentric:spring-boot-admin-starter-client:${springAdminVersion}"
		implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		implementation group: 'org.springframework.data', name: 'spring-data-commons', version: springDataCommonsVersion

		compileOnly 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

		annotationProcessor 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: logstashVersion

		implementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'io.projectreactor:reactor-test'
		testImplementation group: 'org.assertj', name: 'assertj-core', version: assertJVersion
		testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
		testImplementation 'org.testcontainers:junit-jupiter'
		testImplementation group: 'com.redis.testcontainers', name: 'testcontainers-redis', version: testcontainersRedisVersion
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
			mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
			mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		}
	}

	test {
		useJUnitPlatform()
		finalizedBy(jacocoTestReport)
	}

	jacoco {
		toolVersion = '0.8.7'
	}

	jacocoTestReport {
		reports {
			html.required = true
			xml.required = true
			csv.required = false
			html.destination file("${buildDir}/jacocoHtml")
		}
	}

}


